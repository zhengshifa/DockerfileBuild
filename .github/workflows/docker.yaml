name: Build and Push Docker Image

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}
  ALIYUN_NAME_SPACE: ${{ secrets.ALIYUN_NAME_SPACE }}
  ALIYUN_REGISTRY_USER: ${{ secrets.ALIYUN_REGISTRY_USER }}
  ALIYUN_REGISTRY_PASSWORD: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Aliyun Registry
      run: |
        docker login -u $ALIYUN_REGISTRY_USER -p $ALIYUN_REGISTRY_PASSWORD $ALIYUN_REGISTRY

    - name: Get Git Commit Message
      id: get_commit_message
      run: |
        # Fetch the latest commit message from the current branch
        commit_message=$(git log -1 --pretty=%B)
        # Sanitize the commit message for use as a Docker tag
        sanitized_commit_message=$(echo "$commit_message" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]' | tr -c '[:alnum:]' '-')
        #echo "COMMIT_MESSAGE=$sanitized_commit_message" >> $GITHUB_ENV
        echo "COMMIT_MESSAGE=$commit_message" >> $GITHUB_ENV

    - name: Build Docker Image
      run: |
        # Ensure Dockerfile is present
        if [ ! -f Dockerfile ]; then
          echo "Dockerfile not found!"
          exit 1
        fi
        # Define image name with registry and commit message
        new_image="${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAME_SPACE }}/${{ env.COMMIT_MESSAGE }}"

        # Build the Docker image with the commit message as the tag
        docker build -t  $new_image .
        echo "=========================================="

        echo "ALIYUN_REGISTRY: $ALIYUN_REGISTRY"
        echo "ALIYUN_NAME_SPACE: $ALIYUN_NAME_SPACE"
        echo "ALIYUN_REGISTRY_USER: $ALIYUN_REGISTRY_USER"
        echo "ALIYUN_REGISTRY_PASSWORD: $ALIYUN_REGISTRY_PASSWORD"
        echo "COMMIT_MESSAGE: ${{ env.COMMIT_MESSAGE }}"
        echo "Docker Image: $new_image"
        echo "=========================================="

    - name: Tag and Push Docker Image
      run: |
        new_image="${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAME_SPACE }}/${{ env.COMMIT_MESSAGE }}"
        # Tag and push the image
        #docker tag ${{ env.COMMIT_MESSAGE }} $new_image
        docker push $new_image

        # Clean up local images
        #docker rmi ${{ env.COMMIT_MESSAGE }}
        docker rmi  $new_image
